matplot(t(FieldGoals))
matplot(t(FieldGoals), type = "b", pch="15:18", col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players)
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6, pch=15:18, horiz=F))
matplot(t(FieldGoals), type = "b", pch="15:18", col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6, pch=15:18, horiz=F))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F))
matplot(t(FieldGoals), type = "b", pch="15:18", col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=T)
matplot(t(FieldGoals), type = "b", pch="15:18", col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=T)
matplot(t(FieldGoals), type = "b", pch="15:18", col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(FieldGoals), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(FieldGoals), type = "a", pch=15:18, col=c(1:4, 6))
matplot(t(FieldGoals), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(FieldGoals/Games), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(FieldGoals/FieldGoalAttempts), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(MinutesPlayed/Games), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(Points/Games), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(Points/MinutesPlayed), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
?legend()
0
x <- c("a", "b", "c", "d", "e")
x
x[c(1,5)]
x[1]
Games
Games[1:3, 6:10]
Games[c(1,10),]
Games[1,10]
Games[,c(1,10)]
Games[,c("2008","2009")]
Games[1,]
Games[c(1,)]
Games[c(1)]
Games[1,,drop=F]
Games[1,,drop=T]
Games[1,5,drop=T]
Games[1,5,drop=F]
?matrix()
matplot(t(MinutesPlayed), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
t(MinutesPlayed)
Data <- MinutesPlayed[1:3,]
Data
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4, 6), pch=15:18, horiz=F)
legend("bottomleft", inset=0.01, legend=Players[1:3], col=c(1:4, 6), pch=15:18, horiz=F)
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players[1:3], col=c(1:4, 6), pch=15:18, horiz=F)
Data <- MinutesPlayed[1,]
Data
matplot(t(Data), type = "b", pch=15:18, col=c(1, 6))
legend("bottomleft", inset=0.01, legend=Players[1], col=c(1:4, 6), pch=15:18, horiz=F)
Data <- MinutesPlayed[1,,drop=F]
Data
matplot(t(Data), type = "b", pch=15:18, col=c(1, 6))
legend("bottomleft", inset=0.01, legend=Players[1], col=c(1:4, 6), pch=15:18, horiz=F)
Data <- MinutesPlayed[1,,drop]
Data <- MinutesPlayed[1,,drop=T]
Data <- MinutesPlayed[1,,drop=F]
Data
matplot(t(Data), type = "b", pch=15:18, col=c(1, 6))
legend("bottomleft", inset=0.01, legend=Players[1], col=c(1:4, 6), pch=15:18, horiz=F)
myplot <- function(){
Data <- MinutesPlayed[1,,drop=F]
matplot(t(Data), type = "b", pch=15:18, col=c(1, 6))
legend("bottomleft", inset=0.01, legend=Players[1], col=c(1:4, 6), pch=15:18, horiz=F)
}
myplot()
myplot()
myplot()
myplot <- function(){
Data <- MinutesPlayed[2:3,,drop=F]
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players[2:3], col=c(1:4, 6), pch=15:18, horiz=F)
}
myplot()
myplot(1:5)
myplot <- function(rows){
Data <- MinutesPlayed[rows,,drop=F]
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players[rows], col=c(1:4, 6), pch=15:18, horiz=F)
}
myplot(1:5)
myplot(1:4)
myplot(1:8)
myplot(1:10)
myplot <- function(data,rows){
Data <- data[rows,,drop=F]
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players[rows], col=c(1:4, 6), pch=15:18, horiz=F)
}
myplot(Salary,1:10)
myplot <- function(data,rows=1:10){
Data <- data[rows,,drop=F]
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.01, legend=Players[rows], col=c(1:4, 6), pch=15:18, horiz=F)
}
myplot(Salary,)
myplot(Salary,)
myplot(Salary)
myplot(Salary,5)
myplot(Salary)
myplot(MinutesPlayed)
myplot(MinutesPlayed/Games)
myplot(MinutesPlayed/Games, 3)
myplot(Games)
myplot(Salary/FieldGoals)
myplot(Salary / Games)
myplot(MinutesPlayed)
myplot(Points)
myplot(FieldGoals/Games)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoalAttempts/Games)
myplot(Points/Games)
myplot(Salary)
myplot <- function(data,rows=1:10){
Data <- data[rows,,drop=F]
matplot(t(Data), type = "b", pch=15:18, col=c(1:4, 6))
legend("bottomleft", inset=0.001, legend=Players[rows], col=c(1:4, 6), pch=15:18, horiz=F)
}
myplot(Salary)
myplot(Salary / Games)
myplot(Salary / FieldGoals)
myplot(MinutesPlayed)
myplot(Points)
myplot(FieldGoals/Games)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoals/Games)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoalAttempts/Games)
myplot(FieldGoals/Games)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoals/Games)
myplot(FieldGoals/FieldGoalAttempts)
myplot(FieldGoals/FieldGoalAttempts) # accuracy
myplot(FieldGoalAttempts/Games)
myplot(Points/Games)
myplot(FieldGoals/FieldGoalAttempts) # accuracy
myplot(FieldGoalAttempts/Games)
myplot(MinutesPlayed/Game)
myplot(MinutesPlayed/Games)
myplot(Games)
myplot(Games)
myplot(FieldGoals/MinutesPlayed)
myplot(Points/FieldGoals)
#Dear Student,
#
#Welcome to the dataset for the homework exercise.
#
#Instructions for this dataset:
# You have only been supplied vectors. You will need
# to create the matrices yourself.
# Matrices:
# - FreeThrows
# - FreeThrowAttempts
#
#Sincerely,
#Kirill Eremenko
#www.superdatascience.com
#Copyright: These datasets were prepared using publicly available data.
#           However, theses scripts are subject to Copyright Laws.
#           If you wish to use these R scripts outside of the R Programming Course
#           by Kirill Eremenko, you may do so by referencing www.superdatascience.com in your work.
#Comments:
#Seasons are labeled based on the first year in the season
#E.g. the 2012-2013 season is preseneted as simply 2012
#Notes and Corrections to the data:
#Kevin Durant: 2006 - College Data Used
#Kevin Durant: 2005 - Proxied With 2006 Data
#Derrick Rose: 2012 - Did Not Play
#Derrick Rose: 2007 - College Data Used
#Derrick Rose: 2006 - Proxied With 2007 Data
#Derrick Rose: 2005 - Proxied With 2007 Data
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
#Matrix
#
# <put your code here>
#
#Free Throw Attempts
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
#Matrix
#
# <put your code here>
#
matrix("KobeBryant_FT","JoeJohnson_FT","LeBronJames_FT",
"CarmeloAnthony_FT","DwightHoward_FT","ChrisBosh_FT",
"ChrisPaul_FT","KevinDurant_FT","DerrickRose_FT",
"DwayneWade_FT")
#Dear Student,
#
#Welcome to the dataset for the homework exercise.
#
#Instructions for this dataset:
# You have only been supplied vectors. You will need
# to create the matrices yourself.
# Matrices:
# - FreeThrows
# - FreeThrowAttempts
#
#Sincerely,
#Kirill Eremenko
#www.superdatascience.com
#Copyright: These datasets were prepared using publicly available data.
#           However, theses scripts are subject to Copyright Laws.
#           If you wish to use these R scripts outside of the R Programming Course
#           by Kirill Eremenko, you may do so by referencing www.superdatascience.com in your work.
#Comments:
#Seasons are labeled based on the first year in the season
#E.g. the 2012-2013 season is preseneted as simply 2012
#Notes and Corrections to the data:
#Kevin Durant: 2006 - College Data Used
#Kevin Durant: 2005 - Proxied With 2006 Data
#Derrick Rose: 2012 - Did Not Play
#Derrick Rose: 2007 - College Data Used
#Derrick Rose: 2006 - Proxied With 2007 Data
#Derrick Rose: 2005 - Proxied With 2007 Data
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
#Matrix
#
# <put your code here>
FT <-rbind(KobeBryant_FT,JoeJohnson_FT,LeBronJames_FT,
CarmeloAnthony_FT,DwightHoward_FT,ChrisBosh_FT,
ChrisPaul_FT,KevinDurant_FT,DerrickRose_FT,
DwayneWade_FT)
rm(KobeBryant_FT,JoeJohnson_FT,LeBronJames_FT,
CarmeloAnthony_FT,DwightHoward_FT,ChrisBosh_FT,
ChrisPaul_FT,KevinDurant_FT,DerrickRose_FT,
DwayneWade_FT)
colnames(FT) <- Seasons
rownames(FT) <- Players
#Free Throw Attempts
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
#Matrix
#
# <put your code here>
FTA <-rbind(KobeBryant_FTA,JoeJohnson_FTA,LeBronJames_FTA,
CarmeloAnthony_FTA,DwightHoward_FTA,ChrisBosh_FTA,
ChrisPaul_FTA,KevinDurant_FTA,DerrickRose_FTA,
DwayneWade_FTA)
rm(KobeBryant_FTA,JoeJohnson_FTA,LeBronJames_FTA,
CarmeloAnthony_FTA,DwightHoward_FTA,ChrisBosh_FTA,
ChrisPaul_FTA,KevinDurant_FTA,DerrickRose_FTA,
DwayneWade_FTA)
colnames(FTA) <- Seasons
rownames(FTA) <- Players
#Dear Student,
#
#Welcome to the dataset for the homework exercise.
#
#Instructions for this dataset:
# You have only been supplied vectors. You will need
# to create the matrices yourself.
# Matrices:
# - FreeThrows
# - FreeThrowAttempts
#
#Sincerely,
#Kirill Eremenko
#www.superdatascience.com
#Copyright: These datasets were prepared using publicly available data.
#           However, theses scripts are subject to Copyright Laws.
#           If you wish to use these R scripts outside of the R Programming Course
#           by Kirill Eremenko, you may do so by referencing www.superdatascience.com in your work.
#Comments:
#Seasons are labeled based on the first year in the season
#E.g. the 2012-2013 season is preseneted as simply 2012
#Notes and Corrections to the data:
#Kevin Durant: 2006 - College Data Used
#Kevin Durant: 2005 - Proxied With 2006 Data
#Derrick Rose: 2012 - Did Not Play
#Derrick Rose: 2007 - College Data Used
#Derrick Rose: 2006 - Proxied With 2007 Data
#Derrick Rose: 2005 - Proxied With 2007 Data
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
#Matrix
#
# <put your code here>
FT <-rbind(KobeBryant_FT,JoeJohnson_FT,LeBronJames_FT,
CarmeloAnthony_FT,DwightHoward_FT,ChrisBosh_FT,
ChrisPaul_FT,KevinDurant_FT,DerrickRose_FT,
DwayneWade_FT)
rm(KobeBryant_FT,JoeJohnson_FT,LeBronJames_FT,
CarmeloAnthony_FT,DwightHoward_FT,ChrisBosh_FT,
ChrisPaul_FT,KevinDurant_FT,DerrickRose_FT,
DwayneWade_FT)
colnames(FT) <- Seasons
rownames(FT) <- Players
#Free Throw Attempts
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
#Matrix
#
# <put your code here>
FTA <-rbind(KobeBryant_FTA,JoeJohnson_FTA,LeBronJames_FTA,
CarmeloAnthony_FTA,DwightHoward_FTA,ChrisBosh_FTA,
ChrisPaul_FTA,KevinDurant_FTA,DerrickRose_FTA,
DwayneWade_FTA)
rm(KobeBryant_FTA,JoeJohnson_FTA,LeBronJames_FTA,
CarmeloAnthony_FTA,DwightHoward_FTA,ChrisBosh_FTA,
ChrisPaul_FTA,KevinDurant_FTA,DerrickRose_FTA,
DwayneWade_FTA)
colnames(FTA) <- Seasons
rownames(FTA) <- Players
myplot(FT/Games)
myplot(FT/FTA)
myplot(FT/Games)
myplot(FT/FTA)
myplot(FT/Games)
myplot(FT/FTA)
myplot((Points-FT)/Games)
myplot((Points-FT)/Points)
myplot(Points/FieldGoals)
myplot((Points-FT))/FieldGoals)
myplot((Points-FT)/FieldGoals)
myplot(FT/FTA)
myplot((Points-FT)/FieldGoals)
myplot(FT/Games)
myplot((Points-FT)/FieldGoals)
?read.csv()
setwd("C:\\Users\\ohyee\\Documents\\GitHub\\Python\\crawler\\twse")
getwd()
mov <- read.csv("prices.csv")
head(mov)
tail(mov)
str(mov)
View(mov)
mov <- read.csv("prices.csv")
head(mov)
tail(mov)
str(mov)
summary(mov$Studio)
twse <- read.csv("prices.csv")
head(twse)
tail(twse)
str(twse)
View(mov)
twse <- read.csv("prices.csv")
str(twse)
library(ggp;ot2)
library(ggplot2)
colnames(twse) <- c("Date", "Price", "Change", "Volumn")
twse <- read.csv("prices.csv")
colnames(twse) <- c("Date", "Price", "Change", "Volumn")
summary(twse)
View(twse)
head(twse)
tail(twse)
str(twse)
twse$Date <- factor(twse$Date)
str(twse)
twse <- read.csv("prices.csv")
colnames(twse) <- c("Date", "Price", "Change", "Volumn")
twse$Date <- factor(twse$Date)
str(twse)
ggplot(data=twse, x=Date, y=Price)
source('~/GitHub/Python/crawler/twse/twse_chart.R', echo=TRUE)
ggplot(data=twse, aes(x=Date, y=Price)
ggplot(data=twse, aes(x=Date, y=Price))
library(ggplot2)
ggplot(data=twse, aes(x=Date, y=Price))
ggplot(data=twse, aes(x=Price, y=Change))
ggplot(data=twse, aes(x=Price, y=Change)) +
geom_point()
ggplot(data=twse, aes(x=Date, y=Change)) +
geom_point()
ggplot(data=twse, aes(x=Date, y=Price)) +
geom_line()
ggplot(data=twse, aes(x=Date, y=Price)) +
geom_line()
ggplot(data=twse, aes(x=Date, y=Price)) +
geom_point()
View(twse)
twse <- read.csv("prices.csv")
colnames(twse) <- c("id", "Date", "Price", "Change", "Volumn")
colnames(twse) <- c("ID", "Date", "Price", "Change", "Volumn")
library(ggplot2)
ggplot(data=twse, aes(x=Date, y=Price)) +
geom_point()
ggplot(data=twse, aes(x=ID, y=Price)) +
geom_point()
?ggplot()
?aes
ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point()
ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_line()
ggplot(data=twse, aes(x=ID, y=Price)) +
geom_line()
p <- ggplot(data=twse, aes(x=ID, y=Price)) +
geom_line()
p
p + ggplot(data=twse, aes(x=ID, y=Change))
p + ggplot(data=twse, aes(x=ID, y=Change)) +
geom_point()
w <- p + ggplot(data=twse, aes(x=ID, y=Change)) +
geom_point()
w <- p + geom_histogram(Volumn)
w <- p + geom_histogram(twse$Volumn)
w <- p + geom_histogram(aes(Volumn)
w <- p + geom_histogram(aes(Volumn))
p + geom_histogram(aes(Volumn))
p + geom_histogram(aes(color=Volumn))
p + geom_line(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_line()
p + geom_line(aes(color=Volumn))
p + geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point()
p + geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price, y=Volumn)) +
geom_point()
p <- ggplot(data=twse, aes(x=-ID, y=Price, z=Volumn)) +
geom_point()
p + geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price, z=Volumn)) +
geom_point()
p
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point()
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point(aes(color=Volumn))
p + geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point(aes(color=Volumn))
p + geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price)) +
geom_point(aes(color=Volumn))
p <- ggplot(data=twse, aes(x=-ID, y=Price))
p + geom_point(aes(color=Volumn))
